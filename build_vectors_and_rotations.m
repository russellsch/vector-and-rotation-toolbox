function built = build_vectors_and_rotations(requested, out_path)

% BUILD_VECTORS_AND_ROTATIONS  Builds MEX files for the various functions
%
% Builds many functions in this toolbox as MEX using MATLAB Coder and 
% places the resulting MEX in the 'mex' directory.
%
% Inputs:
%
% requested  Names of functions to build (defaults to all functions)
% out_path   Directory in which to put the built MEX files
%
% Outputs:
%
% built      A list of the functions that were successfully built

% Copyright 2016 An Uncommon Lab

    % Make sure MATLAB Coder is installed.
    v = ver();
    if ~any(strcmp({v.Name}, 'MATLAB Coder'))
        error(['MATLAB Coder is necessary to build MEX files from ' ...
               'MATLAB source.']);
    end

    % Defaults
    if nargin < 2
        out_path = fullfile(fileparts(mfilename('fullpath')), 'mex');
    end

    % Generic values
    n     = inf;
    r     = coder.typeof(0, [3 n],   [0 1]);
    theta = coder.typeof(0, [1 n],   [0 1]);
    R     = coder.typeof(0, [3 3 n], [0 0 1]);
    q     = coder.typeof(0, [4 n],   [0 1]);
    p     = coder.typeof(0, [3 n],   [0 1]);
    ea    = coder.typeof(0, [3 n],   [0 1]);
    t     = coder.typeof(0, [1, inf], [0 1]);
    qi    = coder.typeof(0, [4, inf], [0 1]);
    seq   = coder.typeof(uint8(1), [1 3]);
    f     = coder.typeof(1);

    % Things to build
    build = {'aa2dcm',  {theta, r}; ...
             'aa2mrp',  {theta, r, f}; ...
             'aa2q',    {theta, r}; ...
             'dcm2aa',  {R}; ...
             'dcm2ea',  {R, seq}; ...
             'dcm2q',   {R}; ...
             'ea2dcm',  {ea, seq}; ...
             'ea2q',    {ea, seq}; ...
             'mrp2aa',  {p, f}; ...
             'mrp2dcm', {p, f}; ...
             'mrp2q',   {p, f}; ...
             'q2aa',    {q}; ...
             'q2dcm',   {q}; ...
             'q2ea',    {q, seq}; ...
             'q2mrp',   {q, f}; ...
             'mrpalt',  {p, f}; ...
             'mrpcomp', {p, p, f}; ...
             'mrpdiff', {p, p, f}; ...
             'mrperr',  {p, p, f}; ...
             'qcomp',   {q, q}; ...
             'qdiff',   {q, q}; ...
             'qerr',    {q, q}; ...
             'qinv',    {q}; ...
             'qpos',    {q}; ...
             'qrot',    {q, r}; ...
             'rae2xyz', {r}; ...
             'xyz2rae', {r}};
         
...             'qinterp', {t, qi, t}; ...

    % If only a subset is requested, find out which.
    if nargin >= 1 && ~isempty(requested)
        indices = false(length(build), 1);
        for k = 1:length(requested)
            indices = indices | strcmp(build(:,1), requested{k});
        end
        build = build(indices, :);
    end

    % Build everything.
    tic();
    for k = 1:size(build, 1)
        fprintf('Building %s...\n', build{k, 1});
        codegen('-config:mex', build{k, 1}, ...
                '-args', build{k, 2}, ...
                '-o', fullfile(out_path, [build{k,1} '_mex']));
    end
    toc();

    % Return the names of the built functions.
    built = build(:,1);
    
end % build_vectors_and_rotations
